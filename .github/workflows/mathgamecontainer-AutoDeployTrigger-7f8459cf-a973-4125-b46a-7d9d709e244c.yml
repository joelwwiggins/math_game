name: Deploy using Terraform and Ansible

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Ansible & Docker SDK
        run: pip install ansible docker

      - name: Run Ansible Playbook to Build & Push Image
        working-directory: ansible
        env:
          ACR_URL: ${{ secrets.REGISTRY_SERVER }}              # e.g. yourregistry.azurecr.io
          ACR_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          ACR_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          IMAGE_TAG: ${{ github.sha }}
        run: ansible-playbook deploy_container.yml

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform
        env:
          TF_VAR_resource_group_name: ${{ secrets.RESOURCE_GROUP }}
          TF_VAR_location: "eastus"        # or from secrets if needed
          TF_VAR_registry_name: ${{ secrets.REGISTRY_NAME }}
          TF_VAR_container_app_env: ${{ secrets.CONTAINER_APP_ENV }}
          TF_VAR_container_app_name: ${{ secrets.CONTAINER_APP_NAME }}
          TF_VAR_image_tag: ${{ github.sha }}
          TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
          TF_VAR_log_analytics_workspace_id: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
        run: terraform apply -auto-approve
