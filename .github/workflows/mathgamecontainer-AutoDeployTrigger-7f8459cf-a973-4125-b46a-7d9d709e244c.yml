name: Deploy to Azure Container Apps

on:
  push:
    branches: 
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write
      contents: read

      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Validate Docker Compose file
        run: docker compose config

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.MATHGAMECONTAINER_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.MATHGAMECONTAINER_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.MATHGAMECONTAINER_AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.MATHGAMECONTAINER_REGISTRY_SERVER }}
          username: ${{ secrets.MATHGAMECONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.MATHGAMECONTAINER_REGISTRY_PASSWORD }}

      - name: Build and push images
        run: |
          docker compose build
          docker tag mydockerhubusername/math-game:latest ${{ secrets.MATHGAMECONTAINER_REGISTRY_SERVER }}/mathgame-web:${{ github.sha }}
          docker pull postgres:13
          docker tag postgres:13 ${{ secrets.MATHGAMECONTAINER_REGISTRY_SERVER }}/mathgame-db:${{ github.sha }}
          docker push ${{ secrets.MATHGAMECONTAINER_REGISTRY_SERVER }}/mathgame-web:${{ github.sha }}
          docker push ${{ secrets.MATHGAMECONTAINER_REGISTRY_SERVER }}/mathgame-db:${{ github.sha }}

      - name: Deploy or update DB Container App
        run: |
          if az containerapp show --name mathgame-db --resource-group mathgameresource &>/dev/null; then
            az containerapp update \
              --name mathgame-db \
              --resource-group mathgameresource \
              --image ${{ secrets.MATHGAMECONTAINER_REGISTRY_SERVER }}/mathgame-db:${{ github.sha }} \
              --set-env-vars \
                POSTGRES_DB=math_game \
                POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
                POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          else
            az containerapp create \
              --name mathgame-db \
              --resource-group mathgameresource \
              --image ${{ secrets.MATHGAMECONTAINER_REGISTRY_SERVER }}/mathgame-db:${{ github.sha }} \
              --environment mathgame-db-env \
              --registry-server ${{ secrets.MATHGAMECONTAINER_REGISTRY_SERVER }} \
              --registry-username ${{ secrets.MATHGAMECONTAINER_REGISTRY_USERNAME }} \
              --registry-password ${{ secrets.MATHGAMECONTAINER_REGISTRY_PASSWORD }} \
              --env-vars \
                POSTGRES_DB=math_game \
                POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
                POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
              --cpu 0.5 --memory 1.0Gi \
              --min-replicas 1 --max-replicas 1 \
              --target-port 5432 \
              --ingress internal
          fi

      - name: Deploy or update Web Container App
        run: |
          if az containerapp show --name mathgame-web --resource-group mathgameresource &>/dev/null; then
            az containerapp update \
              --name mathgame-web \
              --resource-group mathgameresource \
              --image ${{ secrets.MATHGAMECONTAINER_REGISTRY_SERVER }}/mathgame-web:${{ github.sha }} \
              --set-env-vars \
                POSTGRES_DB=math_game \
                POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
                POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
                POSTGRES_HOST=mathgame-db \
                POSTGRES_PORT=5432 \
                SECRET_KEY=${{ secrets.SECRET_KEY }}
          else
            az containerapp create \
              --name mathgame-web \
              --resource-group mathgameresource \
              --image ${{ secrets.MATHGAMECONTAINER_REGISTRY_SERVER }}/mathgame-web:${{ github.sha }} \
              --environment mathgame-db-env \
              --registry-server ${{ secrets.MATHGAMECONTAINER_REGISTRY_SERVER }} \
              --registry-username ${{ secrets.MATHGAMECONTAINER_REGISTRY_USERNAME }} \
              --registry-password ${{ secrets.MATHGAMECONTAINER_REGISTRY_PASSWORD }} \
              --env-vars \
                POSTGRES_DB=math_game \
                POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
                POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
                POSTGRES_HOST=mathgame-db \
                POSTGRES_PORT=5432 \
                SECRET_KEY=${{ secrets.SECRET_KEY }} \
              --cpu 0.5 --memory 1.0Gi \
              --min-replicas 1 --max-replicas 3 \
              --target-port 8080 \
              --ingress external
          fi

      - name: Set Volume Mount for Web App
        run: |
          az containerapp update -n mathgame-web -g mathgameresource --set \
          configuration.volumes='[{"name":"mathgamevolumemount","storageType":"AzureFile","azureFile":{"shareName":"${{ secrets.FILE_SHARE_NAME }}","storageAccountName":"${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}","storageAccountKey":"${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}"}}]' \
          configuration.volumeMounts='[{"mountPath":"/mnt/logs","volumeName":"mathgamevolumemount"}]'

      - name: Clean up unused Docker images
        run: docker image prune -f